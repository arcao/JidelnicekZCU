buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'com.android.tools.build:gradle:2.1.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.android.application'

repositories {
    jcenter()
    maven {
        url 'https://raw.githubusercontent.com/Goddchen/mvn-repo/master/'
    }
}

def gitSha() {
    return 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim();
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ", TimeZone.getTimeZone('UTC'));
}

def gitVersionCode() {
    return 'git rev-list --count HEAD'.execute([], project.rootDir).text.trim().toInteger();
}

def isTravis = 'true'.equals(System.getenv('TRAVIS'))
def preDexEnabled = 'true'.equals(System.getProperty('pre-dex', 'true'))

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries preDexEnabled && !isTravis
    }

    defaultConfig {
        versionCode gitVersionCode()
        buildConfigField 'String', 'GIT_SHA', 'null'
        buildConfigField 'String', 'BUILD_TIME', 'null'

        resConfigs 'en', 'cs', 'sk'
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            keyAlias "jidelnicekzcu"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
        }
        release {
            versionNameSuffix ''

            buildConfigField 'String', 'GIT_SHA', '"' + gitSha() +'"'
            buildConfigField 'String', 'BUILD_TIME', '"' + buildTime() + '"'

            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard.cfg'
        }
    }

    packagingOptions {
        // removed because of conflict in creating package
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude '.readme'
    }

    lintOptions { abortOnError false }
}

dependencies {
    compile 'com.android.support:design:24.1.1'
    compile 'com.android.support:support-v4:24.1.1'
    compile 'com.android.support:support-v13:24.1.1'
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:recyclerview-v7:24.1.1'
    compile 'com.android.support:cardview-v7:24.1.1'
    compile 'com.android.support:preference-v14:24.1.1'
    compile 'com.android:volley:1.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.1'
    compile 'com.jakewharton.timber:timber:4.1.2'
    compile 'commons-io:commons-io:2.5'
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}